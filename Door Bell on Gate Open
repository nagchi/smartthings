/**
 *  Alarm Strobe on Motion
 *
 *  Copyright 2015 Nagaraja Chitters
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
definition(
    name: "Door Bell on Gate Open - ver 3",
    namespace: "nagchi",
    author: "Nagaraja Chitters",
    description: "Ding in Home Siren on Gate Open",
    category: "Convenience",
    iconUrl: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience.png",
    iconX2Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png",
    iconX3Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png"
)

preferences {
	section("Siren to turn ON") {
		input "switches", "capability.switch", title: "Choose in house siren", multiple: true
	}
    /*
    section("Alarm strobe to turn ON") {
		input "alarm", "capability.alarm", title: "Choose Alarm Device", multiple: true
	}
	section("Turn OFF when there is no motion") {
		input "motionSensor", "capability.motionSensor", title: "Choose motion sensor"
	}
    */
    section("Monitor this door or window") {
		input "contact", "capability.contactSensor"
	}
//	section("Siren ON Delay") {                    
//		input "delayMsec", "number", title: "Siren ON Milli Seconds?"
//	}
}

def installed() {
	state.sirenOn = false;
	subscribe(contact, "contact", contactHandler)
	//subscribe(motionSensor, "motion", motionHandler)
    switches.off()
}

def updated() {
	unsubscribe()
    subscribe(contact, "contact", contactHandler)
	//subscribe(motionSensor, "motion", motionHandler)
    switches.off()
}

def switchOffHandler() {
    switches.off()
}
   
def contactHandler(evt) {
	//log.debug "handler $evt.name: $evt.value"  
    
    if (evt.value == "open") {
        def delayMsec = 1600
//      alarm.strobe()
        delay Between([switches.on(), switches.off()], (1 * delayMsec))
        runIn(5, switchOffHandler)
        
//      switches.on()
//      switches.off([delay : delayMsec])

//      just to introduce some delay
//      def deltaSeconds = 5
//      def timeAgo = new Date(now() - (1000 * deltaSeconds))
    
//      switches.off()
//      switches.off([delay : 5])
//      switches.off([delay : 10])
    } else {
        switches.off()
    }

    /*
    if (evt.value == "open") {
        if (state.sirenOn == false) {
    		switches.on()
            state.sirenOn = true
     	 	//switch siren off after few msec delay
    		switches.off([delay : delayMsec])
    	}
	} else {
    	switches.off()
        state.sirenOn = false
    }
    */
}

// Not used.
def motionHandler(evt) {
	//log.debug "handler $evt.name: $evt.value"    
	if (evt.value == "active") {
    	if (state.sirenOn == false) {
        	switches.on()
            state.sirenOn = true
        	/*
         	 * switch siren off after few msec delay
         	 */
            switches.off([delay : delayMsec])
		}
    } else {
    	switches.off();
        state.sirenOn = false
    }
}
